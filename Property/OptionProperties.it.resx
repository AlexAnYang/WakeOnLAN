<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AppVersion" xml:space="preserve">
    <value>Versione</value>
  </data>
  <data name="AppVersionDescription" xml:space="preserve">
    <value>Versione applicazione</value>
  </data>
  <data name="AutoCheck" xml:space="preserve">
    <value>Controlla automanticamente gli aggiornamenti</value>
  </data>
  <data name="Broadcast_Address" xml:space="preserve">
    <value>Indirizzo di Broadcast</value>
  </data>
  <data name="Broadcast_AddressDescription" xml:space="preserve">
    <value>Inserire l'indirizzo IP di broadcast per i pacchetti di broadcast di WOL</value>
  </data>
  <data name="cat_Application" xml:space="preserve">
    <value>Applicazione</value>
  </data>
  <data name="cat_Emergency" xml:space="preserve">
    <value>Impostazione Emergenza</value>
  </data>
  <data name="cat_Shutdown" xml:space="preserve">
    <value>Spegni</value>
  </data>
  <data name="cat_WOL" xml:space="preserve">
    <value>WOL</value>
  </data>
  <data name="Culture" xml:space="preserve">
    <value>Cultura</value>
  </data>
  <data name="dbPath" xml:space="preserve">
    <value>Percorso database</value>
  </data>
  <data name="Delay" xml:space="preserve">
    <value>Tempo di ritardo</value>
  </data>
  <data name="DelayDescription" xml:space="preserve">
    <value>Tempo di ritardo di default per lo spegnimento.</value>
  </data>
  <data name="EmergencyDelay" xml:space="preserve">
    <value>Tempo di ritardo</value>
  </data>
  <data name="EmergencyDelayDescription" xml:space="preserve">
    <value>Tempo di ritardo per lo spegnimento di emergenza</value>
  </data>
  <data name="EmergencyShutdown" xml:space="preserve">
    <value>Messaggio di default</value>
  </data>
  <data name="EmergencyShutdownDescription" xml:space="preserve">
    <value>Messaggio dello spegnimento di emergenza</value>
  </data>
  <data name="Enable_Sound" xml:space="preserve">
    <value>Abilita il suono</value>
  </data>
  <data name="Enable_SoundDescription" xml:space="preserve">
    <value>Suona quando un server monitorato va online, o smette di rispondere</value>
  </data>
  <data name="Force" xml:space="preserve">
    <value>Forza lo spegnimento</value>
  </data>
  <data name="ForceDescription" xml:space="preserve">
    <value>Forza lo spegnimento del server remoto. I file non salvati andranno perduti.</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Lingua</value>
  </data>
  <data name="Reboot" xml:space="preserve">
    <value>Riavvio</value>
  </data>
  <data name="RebootDescription" xml:space="preserve">
    <value>Se vero, riavvia dopo lo spegnimento</value>
  </data>
  <data name="ShowSplash" xml:space="preserve">
    <value>Mostra lo Splash Screen</value>
  </data>
  <data name="Shutdown" xml:space="preserve">
    <value>Messaggio di default</value>
  </data>
  <data name="ShutdownDescription" xml:space="preserve">
    <value>Messaggio di spegnimento di default</value>
  </data>
  <data name="Threads" xml:space="preserve">
    <value>Numero di threads</value>
  </data>
  <data name="UDPPort" xml:space="preserve">
    <value>Porta UDP</value>
  </data>
  <data name="UDPPortDescription" xml:space="preserve">
    <value>Inserire il numero della porta UDP per i messaggi di broadcast.</value>
  </data>
</root>